warning: `Option` Query is always `Some`
  --> $DIR/unnecessary_option.rs:17:29
   |
LL | fn test_query1(query: Query<Option<&A>, With<A>>) {
   |                             ^^^^^^^^^^
   |
   = note: `#[warn(unnecessary_option)]` on by default

warning: `Option` Query is always `Some`
  --> $DIR/unnecessary_option.rs:25:33
   |
LL | fn test_query2(mut query: Query<Option<&mut A>, With<A>>) {
   |                                 ^^^^^^^^^^^^^^

warning: `Option` Query is always `Some`
  --> $DIR/unnecessary_option.rs:33:29
   |
LL | fn test_query3(query: Query<Option<&A>, (With<A>, With<B>)>) {
   |                             ^^^^^^^^^^

warning: `Option` Query is always `Some`
  --> $DIR/unnecessary_option.rs:41:33
   |
LL | fn test_query4(mut query: Query<Option<&mut A>, (With<A>, With<B>)>) {
   |                                 ^^^^^^^^^^^^^^

warning: `Option` Query is always `Some`
  --> $DIR/unnecessary_option.rs:49:29
   |
LL | fn test_query5(query: Query<Option<&B>, (With<A>, With<B>)>) {
   |                             ^^^^^^^^^^

warning: `Option` Query is always `Some`
  --> $DIR/unnecessary_option.rs:57:33
   |
LL | fn test_query6(mut query: Query<Option<&mut B>, (With<A>, With<B>)>) {
   |                                 ^^^^^^^^^^^^^^

warning: `Option` Query is always `Some`
  --> $DIR/unnecessary_option.rs:65:30
   |
LL | fn test_query7(query: Query<(Option<&A>, &B), With<A>>) {
   |                              ^^^^^^^^^^

warning: `Option` Query is always `Some`
  --> $DIR/unnecessary_option.rs:73:34
   |
LL | fn test_query8(query: Query<(&A, Option<&B>), With<B>>) {
   |                                  ^^^^^^^^^^

warning: `Option` Query is always `None`
  --> $DIR/unnecessary_option.rs:81:29
   |
LL | fn test_query9(query: Query<Option<&A>, Without<A>>) {
   |                             ^^^^^^^^^^

warning: `Option` Query is always `None`
  --> $DIR/unnecessary_option.rs:89:34
   |
LL | fn test_query10(mut query: Query<Option<&mut A>, Without<A>>) {
   |                                  ^^^^^^^^^^^^^^

warning: `Option` Query is always `None`
  --> $DIR/unnecessary_option.rs:97:30
   |
LL | fn test_query11(query: Query<Option<&A>, (Without<A>, Without<B>)>) {
   |                              ^^^^^^^^^^

warning: `Option` Query is always `None`
  --> $DIR/unnecessary_option.rs:105:34
   |
LL | fn test_query12(mut query: Query<Option<&mut A>, (Without<A>, Without<B>)>) {
   |                                  ^^^^^^^^^^^^^^

warning: `Option` Query is always `None`
  --> $DIR/unnecessary_option.rs:113:30
   |
LL | fn test_query13(query: Query<Option<&B>, (Without<A>, Without<B>)>) {
   |                              ^^^^^^^^^^

warning: `Option` Query is always `None`
  --> $DIR/unnecessary_option.rs:121:34
   |
LL | fn test_query14(mut query: Query<Option<&mut B>, (Without<A>, Without<B>)>) {
   |                                  ^^^^^^^^^^^^^^

warning: `Option` Query is always `Some`
  --> $DIR/unnecessary_option.rs:129:31
   |
LL | fn test_query15(query: Query<(Option<&A>, &B), Added<A>>) {
   |                               ^^^^^^^^^^

warning: `Option` Query is always `Some`
  --> $DIR/unnecessary_option.rs:137:35
   |
LL | fn test_query16(query: Query<(&A, Option<&B>), Changed<B>>) {
   |                                   ^^^^^^^^^^

warning: `Option` Query is always `Some`
  --> $DIR/unnecessary_option.rs:145:39
   |
LL | fn test_query17(query: Query<(&A, &B, Option<(&A, &B)>)>) {
   |                                       ^^^^^^^^^^^^^^^^

warning: `Option` Query is always `Some`
  --> $DIR/unnecessary_option.rs:153:35
   |
LL | fn test_query18(query: Query<(&A, Option<(&A, &B)>), With<B>>) {
   |                                   ^^^^^^^^^^^^^^^^

warning: `Option` Query is always `Some`
  --> $DIR/unnecessary_option.rs:161:35
   |
LL | fn test_query19(query: Query<(&A, Option<(&A, &B)>), Added<B>>) {
   |                                   ^^^^^^^^^^^^^^^^

warning: `Option` Query is always `Some`
  --> $DIR/unnecessary_option.rs:169:35
   |
LL | fn test_query20(query: Query<(&A, Option<(&A, &B)>), Changed<B>>) {
   |                                   ^^^^^^^^^^^^^^^^

warning: `Option` Query is always `None`
  --> $DIR/unnecessary_option.rs:177:35
   |
LL | fn test_query21(query: Query<(&A, Option<(&A, &B)>), Without<B>>) {
   |                                   ^^^^^^^^^^^^^^^^

warning: `Option` Query is always `Some`
  --> $DIR/unnecessary_option.rs:185:47
   |
LL | fn test_query22(query: Query<(&A, Option<(&B, Option<&A>)>)>) {
   |                                               ^^^^^^^^^^

warning: `Option` Query is always `None`
  --> $DIR/unnecessary_option.rs:193:30
   |
LL | fn test_query23(query: Query<Option<(&A, Option<&B>)>, Without<A>>) {
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^

warning: `Option` Query is always `None`
  --> $DIR/unnecessary_option.rs:201:42
   |
LL | fn test_query24(query: Query<Option<(&A, Option<&B>)>, (With<A>, Without<B>)>) {
   |                                          ^^^^^^^^^^

warning: `Option` Query is always `Some`
  --> $DIR/unnecessary_option.rs:201:30
   |
LL | fn test_query24(query: Query<Option<(&A, Option<&B>)>, (With<A>, Without<B>)>) {
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^

warning: `Option` Query is always `Some`
  --> $DIR/unnecessary_option.rs:210:51
   |
LL | fn test_query25(query: Query<(&A, &B, Option<(&A, Option<&B>)>)>) {
   |                                                   ^^^^^^^^^^

warning: `Option` Query is always `Some`
  --> $DIR/unnecessary_option.rs:210:39
   |
LL | fn test_query25(query: Query<(&A, &B, Option<(&A, Option<&B>)>)>) {
   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^

warning: `Option` Query is always `None`
  --> $DIR/unnecessary_option.rs:219:37
   |
LL | fn test_query26(query: Query<Option<Option<&A>>, Without<A>>) {
   |                                     ^^^^^^^^^^

warning: `Option` Query is always `Some`
  --> $DIR/unnecessary_option.rs:219:30
   |
LL | fn test_query26(query: Query<Option<Option<&A>>, Without<A>>) {
   |                              ^^^^^^^^^^^^^^^^^^

warning: `Option` Query is always `Some`
  --> $DIR/unnecessary_option.rs:228:30
   |
LL | fn test_query27(query: Query<Option<&A>, Added<A>>) {
   |                              ^^^^^^^^^^

warning: `Option` Query is always `Some`
  --> $DIR/unnecessary_option.rs:236:30
   |
LL | fn test_query28(query: Query<Option<&A>, Changed<A>>) {
   |                              ^^^^^^^^^^

warning: Empty Query
  --> $DIR/unnecessary_option.rs:279:31
   |
LL | fn negativ_test_query3(query: Query<Option<&A>, (With<A>, Without<A>)>) {
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(empty_query)]` on by default

warning: `Option` Query is always `Some`
  --> $DIR/unnecessary_option.rs:304:27
   |
LL |     query1: Query<'w, 's, Option<&'static A>, With<A>>,
   |                           ^^^^^^^^^^^^^^^^^^

warning: `Option` Query is always `Some`
  --> $DIR/unnecessary_option.rs:315:30
   |
LL | ...                   (Option<&'static A>, Option<&'static B>),
   |                        ^^^^^^^^^^^^^^^^^^

warning: `Option` Query is always `Some`
  --> $DIR/unnecessary_option.rs:315:50
   |
LL | ...                   (Option<&'static A>, Option<&'static B>),
   |                                            ^^^^^^^^^^^^^^^^^^

warning: `Option` Query is always `Some`
  --> $DIR/unnecessary_option.rs:326:46
   |
LL |                         (Option<&'static A>, Option<&'static C>),
   |                                              ^^^^^^^^^^^^^^^^^^

warning: 36 warnings emitted

